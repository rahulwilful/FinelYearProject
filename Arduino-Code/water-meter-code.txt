


#include <LiquidCrystal_I2C.h>
#include<SoftwareSerial.h>

LiquidCrystal_I2C lcd(0x27,16,2);
SoftwareSerial gsmSerial(3,4);  //3 is RX and 4is TX

File dataFile;

int sensorPin = 2;
volatile long pulse;
long int volume = 0;

long int volume3 = 0;
long int sendVolume = 0;
long int saveVolume = 0;
long int tempVolume = 0;
int flag = 0;
int I = 0;
int j = 0;
int  k = 0;




void setup() {
  lcd.init();
  lcd.backlight();

  pinMode(sensorPin, INPUT);
  Serial.begin(9600);
  attachInterrupt(digitalPinToInterrupt(sensorPin), increase, RISING);
  gsmSerial.begin(9600);

  gsmSerial.println("AT"); // Send AT command to check if GSM module is responsive
  lcd.setCursor(0,0);
  lcd.print("Checking SIM");
  delay(1000);
  if (gsmSerial.find("OK")) {
    lcd.setCursor(0,1);
    lcd.print("SIM Is Ready");
    delay(1000);
  } else {
    lcd.setCursor(0,1);
    lcd.print("SIM Failed");
    while (1);
  }
  lcd.setCursor(0,1);
  lcd.print("SIM Is Ready");
  lcd.clear();
/*
  gsmSerial.println("AT+CMGF=1"); // Send AT command to set SMS text mode
  delay(100);
  gsmSerial.println("AT+CNMI=2,2,0,0,0"); // Send AT command to enable SMS notification
  delay(100);
  gsmSerial.print("AT+CMGS=\"");
 */

  lcd.setCursor(0,0);
    lcd.print("Initializing SD");
    delay(1000);
    lcd.clear();
    delay(200);
  Serial.println("Initializing SD card...");

  if (!SD.begin(10)) {
    lcd.print("SD failed!");
    while (1);
  }
  lcd.print("SD initialized");
  delay(500);
  lcd.clear();
  delay(200);
  lcd.setCursor(0,1);
  lcd.print("Retrieving Data");
  delay(500);
  lcd.clear();
  //Retrieving Data(Readings)
  
  tempVolume = displayLastData();
  saveVolume = tempVolume;
   lcd.setCursor(14,0);
  lcd.print("mL");
  lcd.setCursor(15,1);
  lcd.print("L"); 
  
}

//***************************************************************************************************

void loop() {

  volume = 2.663 * pulse;
  
  

  if(volume1 == volume)
  {
    lcd.setCursor(14,0);
    lcd.print("mL");
    lcd.setCursor(13,0);
    lcd.print("              ");
  
    lcd.setCursor(0,1);
    lcd.print(saveVolume);
    delay(500);
  }
  else
  {
    
    volume3 = volume - volume3;
    volume2 += volume3;

    if(volume >= 1000)
    {
      if(volume > 1000)
      {
        volume = volume - 1000;
        pulse = 1;
      
      }
      else
      {
        saveVolume++;
        sendVolume++;
        pulse = 1;
        volume = 0;
      }
      // Save data to SD card
      saveData(); 
    }

    lcd.setCursor(0,0);
    lcd.print(volume2);
    
    lcd.setCursor(0,1);
    lcd.print(saveVolume);

  

    delay(500);
  }

  I++;
  
    if(I == 120)
    {
    
      I = 0;
      k = 0;
    }
  //Serial.println(k);
  
  
}
//***************************************************************************************************


int displayLastData() {
  

  
 
  if (dataFile) {

    // Read the last data in the data file
    if (dataFle('\n') == "") {
      lcd.clear();
      lcd.setCursor(0, 1);
      lcd.print("No Data");
      delay(3000);
      lcd.clear();
    } else {
      while (dataFile.available()) {
        Last = dataFile.readStringUntil('\n');
      }
      

      lcd.setCursor(0, 0);
      lcd.print("Data Retrieved");
      delay(1000);
      lcd.clear();

      lcd.setCursor(0, 0);
      lcd.print("Last Volume: ");
      lcd.setCursor(0, 1);
      lcd.print(tempVolume);
      lcd.print(" mL");
      delay(3000);
      lcd.clear();
    }
    // Close data file
    dataFile.close();
  } else {
    lcd.setCursor(0, 1);
    lcd.print("Error opening data file.");
    delay(3000);
    lcd.clear();
  }

  return tempVolume;
}

//***************************************************************************************************

void sendSMS()
{
  
  Serial.println("SMS Function Called");
  lcd.setCursor(0,0);
  lcd.print("Sending SMS");


   if(flag == 0)
  {
    gsmSerial.print("AT+CMGS=\"");
    gsmSerial.print(phoneNumber);
    gsmSerial.println("\"");
    delay(1000);

    gsmSerial.write(0x1A);
    Serial.println("SMS sent.");

    if()
    {
      flag = 1;
      j = 0;
    }
    j++;
    Serial.println("SMS sent to consumer.");
    
  }
  else
  {
    gsmSerial.print("AT+CMGS=\"");
    gsmSerial.print(serverNumber);
    gsmSerial.println("\"");
    delay(1000);

    Serial.println("SMS sent.");
 
    sendVolume = 0;
    Serial.println("SMS sent server.");
  }
  // Send Ctrl+Z character to indicate end of message
  delay(5000); // Wait for SMS to be sent
  lcd.clear();
 
}


//***************************************************************************************************

void increase() {
  
  pulse++;
}

//***************************************************************************************************


void saveData() {
  dataFile;

  if (dataFile) {
    // Print data to data file
    dataFile.println(saveVolume);
    

    // Close data file
    dataFile.close();
  } else {
    Serial.println("Error opening data file.");
  }
}
